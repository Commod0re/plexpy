"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class Type(str, Enum):
    r"""type of playlist to create"""
    AUDIO = 'audio'
    VIDEO = 'video'
    PHOTO = 'photo'

class Smart(int, Enum):
    r"""whether the playlist is smart or not"""
    ZERO = 0
    ONE = 1


@dataclasses.dataclass
class CreatePlaylistRequest:
    smart: Smart = dataclasses.field(metadata={'query_param': { 'field_name': 'smart', 'style': 'form', 'explode': True }})
    r"""whether the playlist is smart or not"""
    title: str = dataclasses.field(metadata={'query_param': { 'field_name': 'title', 'style': 'form', 'explode': True }})
    r"""name of the playlist"""
    type: Type = dataclasses.field(metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""type of playlist to create"""
    play_queue_id: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'playQueueID', 'style': 'form', 'explode': True }})
    r"""the play queue to copy to a playlist"""
    uri: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'uri', 'style': 'form', 'explode': True }})
    r"""the content URI for the playlist"""
    



@dataclasses.dataclass
class CreatePlaylistResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    

